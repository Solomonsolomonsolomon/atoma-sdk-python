"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from atoma_sdk.types import BaseModel
from typing import Any, List, Union
from typing_extensions import TypeAliasType, TypedDict


class Two2TypedDict(TypedDict):
    pass


class Two2(BaseModel):
    pass


TwoTypedDict = TypeAliasType("TwoTypedDict", Union[Two2TypedDict, List[Any]])


Two = TypeAliasType("Two", Union[Two2, List[Any]])


class One2TypedDict(TypedDict):
    pass


class One2(BaseModel):
    pass


OneTypedDict = TypeAliasType("OneTypedDict", Union[One2TypedDict, str])


One = TypeAliasType("One", Union[One2, str])


CreateEmbeddingRequestTypedDict = TypeAliasType(
    "CreateEmbeddingRequestTypedDict", Union[OneTypedDict, TwoTypedDict]
)
r"""Request object for creating embeddings"""


CreateEmbeddingRequest = TypeAliasType("CreateEmbeddingRequest", Union[One, Two])
r"""Request object for creating embeddings"""
